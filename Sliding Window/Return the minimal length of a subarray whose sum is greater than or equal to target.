Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target.
 If there is no such subarray, return 0 instead.

Example 1:

Input:

6

2 3 1 2 4 3

7

Output:

2

Explanation:

The subarray [4,3] has the minimal length under the problem constraint.
-------------------------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
public class test{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i] = sc.nextInt();
            
        }
        int k = sc.nextInt();
        int l=0;
        int c =0;
        int ans = Integer.MAX_VALUE;
        for(int r=0; r<n; r++){
            c = c + arr[r];
            while(c>=k){
                c = c-arr[l];
                ans = Math.min(ans,r-l+1);
                l++;
                
            }
            
        }
        if(ans == Integer.MAX_VALUE){
            System.out.print(0);
        }
        else{
            System.out.print(ans);
        }
        
        
    }
}
